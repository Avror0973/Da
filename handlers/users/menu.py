import logging

from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery


from keyboards.inline.choice_buttons import choice
from keyboards.inline.set_data import vybor
from loader import dp, db


@dp.message_handler(Command("menu"))
async def show_items(message: Message):
    await message.answer(text='–ï—Å–ª–∏ —Å—É—à–∏ —Ç–æ WaySushi‚ù§Ô∏è', reply_markup=choice)


@dp.callback_query_handler(text_contains="delivery")
async def new_delivery(call: CallbackQuery):
    await call.answer(cache_time=60)
    callback_data = call.data
    logging.info(f"{callback_data=}")
    await call.message.answer("–î–æ—Å—Ç–∞–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ—Ä—Ä–∏")  #–≤–æ—Ç —Ç–∞–∫ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥ –∫–Ω–æ–ø–∫—É reply_markup=pear_keyboard


@dp.callback_query_handler(text_contains="my_orders")
async def user_orders(call: CallbackQuery):
    await call.answer(cache_time=60)
    callback_data = call.data
    logging.info(f"{callback_data=}")
    await call.message.answer("–£ –≤–∞—Å –Ω–µ –±—ã–ª–æ –∑–∞–∫–∞–∑–æ–≤")


@dp.callback_query_handler(text_contains="my_info")
async def user_info(call: CallbackQuery):
    await call.answer(cache_time=60)
    callback_data = call.data
    logging.info(f"{callback_data=}")
    user = db.select_user(user_id=call.from_user.id)
    user_data = []
    for i in user[2:]:
        if i == None:
            user_data.append("- –Ω–µ—Ç—É –¥–∞–Ω–Ω—ã—Ö")
        else:
            user_data.append(i)
    await call.message.answer(f"""üë§ –ò–º—è: {user_data[0]}\n\nüìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä:  {user_data[1]}\n\n üì™ –ê–¥—Ä–µ—Å: {user_data[2]}\n\n\n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?""", reply_markup=vybor)
