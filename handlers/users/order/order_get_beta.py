from aiogram.types import CallbackQuery, ReplyKeyboardRemove, Message
from keyboards.inline.choice_consent import consent
from keyboards.inline.choice_buttons import choice
from loader import dp, bot, db
from aiogram.dispatcher import FSMContext
import time
from data.menu_pictures import menu_pics
from data.prices import sushi_price
from handlers.users.order.functions import print_basket
from datetime import datetime


menu_list = ["–ë–µ—à–µ–Ω—ã–π –ª–æ—Å–æ—Å—å", "–ì–æ—Ä—è—á–∏–π —à–∏–∫", "–ë–∞–Ω–∑–∞–π", "–ß—ë—Ä–Ω—ã–π —Å–∞–º—É—Ä–∞–π", "–ö—Ä–∞—Å–∏–≤—ã–µ —Ä–æ–ª–ª—ã"]
drink_list = ['Coca Cola', 'Fanta', 'Lipton', 'Lipton - –õ–∏–º–æ–Ω', 'Pepsi']



@dp.callback_query_handler(text_contains="menu")
async def get_menu(call: CallbackQuery, state=FSMContext):
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await call.message.delete_reply_markup()
    await call.answer(cache_time=60)
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ —Å–æ —Å–ª–æ–≤–∞—Ä–µ–º –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    await state.update_data(choice=[], choice_quantity=[], total_price=[])
    await call.message.answer("–í—ã–±–∏—Ä–∞–π—Ç–µüì≤", reply_markup=consent)


# TODO —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
@dp.callback_query_handler(text_contains="basket", state="*")
async def show_basket(call: CallbackQuery, state=FSMContext):
    await call.message.delete_reply_markup()
    # Work with state for basket
    data = await state.get_data()
    text = print_basket(data)
    await call.answer(cache_time=60)
    await call.message.answer(text, reply_markup=consent)
    await state.set_state("*")


# TODO –ó–∞–ø–∏—Å—å –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ FSM
@dp.message_handler(text=menu_list, state="*")
@dp.message_handler(text=drink_list, state="*")
async def menu_get(message: Message, state=FSMContext):
    user_choice = message.text  # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–∑ —Å—Ç–µ–π—Ç–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ
    data = await state.get_data()
    data_choice = data.get('choice')
    data_choice.append(user_choice)
    # print(data_choice)
    await state.update_data(choice=data_choice)
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await message.answer_photo(photo=f"{menu_pics[user_choice]}",
                               caption=f"üç£<b>{user_choice}</b>\n"
                                       f"–¶–µ–Ω–∞ {sushi_price[user_choice]}‚ÇΩ\n"
                                       f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n")
    # await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    await state.set_state("quantity")


# TODO –†–∞–±–æ—Ç–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤—ã–±–æ—Ä–∞
@dp.message_handler(state="quantity")
async def order_quantity(message: Message, state: FSMContext):
    if message.text.isdigit():
        data = await state.get_data() # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–µ–π—Ç–∞
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å FSM
        choice = data.get('choice') # –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        choice_quantity = data.get('choice_quantity') # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
        choice_total = data.get('total_price') # –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –æ–±—â–µ–π —Å—É–º–º–æ–π –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–∑–∏—Ü–∏–∏
        # –î—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        quantity = int(message.text)  # —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        total_sum = sushi_price[choice[-1]]
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å–∏ –≤ FSM
        choice_quantity.append(quantity) #–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–ª-–æ–º
        choice_total.append(total_sum) #–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –æ–±—â–µ–π —Å—É–º–º–æ–π
        await state.update_data(choice_quantity=choice_quantity, total_price=choice_total) # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –≤ —Å—Ç–µ–π—Ç–µ
        data2 = await state.get_data()
        answer_message = print_basket(data2)
        await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
        await message.answer(answer_message)
        await message.answer("–ï—â–µ —á–µ–≥–æ –Ω–∏ –±—É–¥—å?", reply_markup=consent)
        await state.set_state("*")
        # await state.finish()
    else:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä–∞–º–∏")
        await state.set_state("quantity")


# TODO –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
@dp.callback_query_handler(text_contains="checkout", state="*")
async def checkout_order(call: CallbackQuery, state=FSMContext):
    now = datetime.now()
    user_id = call.from_user.id
    await call.message.delete_reply_markup()
    await call.message.answer('–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç\n'
                              f'–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—à–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –∫ {now.hour+4}:{now.minute}',
                              reply_markup=choice)
    db.new_order(user_id, '–£–º–∞—Ä', '–ì–æ—Ä—è—á–∏–π —à–∏–∫ - 2—à—Ç', '–°—Ç–∞—Ä–∞—è 24', '+79990001122', 0)
    await state.finish()


@dp.callback_query_handler(text_contains="otmena", state="*")
async def checkout_order(call: CallbackQuery, state=FSMContext):
    await call.message.delete_reply_markup()
    await call.message.answer('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–∫–∞–∑', reply_markup=choice)
    await state.finish()
