from aiogram import types
from loader import dp, bot
from aiogram.dispatcher import FSMContext
import time
from data.menu_pictures import menu_pics
from data.prices import sushi_price

#
# menu_list = ["–ë–µ—à–µ–Ω—ã–π –ª–æ—Å–æ—Å—å", "–ì–æ—Ä—è—á–∏–π —à–∏–∫", "–ë–∞–Ω–∑–∞–π", "–ß—ë—Ä–Ω—ã–π —Å–∞–º—É—Ä–∞–π", "–ö—Ä–∞—Å–∏–≤—ã–µ —Ä–æ–ª–ª—ã"]
#
#
# @dp.message_handler(text=menu_list)
# async def menu_get(message: types.Message, state=FSMContext):
#     user_choice = message.text  # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     await state.update_data(choice = user_choice)
#     await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
#     await message.answer_photo(photo=f"{menu_pics[user_choice]}",
#                                caption=f"üç£<b>{user_choice}</b>\n"
#                                        f"–¶–µ–Ω–∞ {sushi_price[user_choice]}‚ÇΩ\n"
#                                        f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: –õ–æ—Å–æ—Å—å –∏ –¥—Ä—É–≥–æ–µ\n")
#     await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
#     await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
#     await state.set_state("quantity")
#
#
# @dp.message_handler(state="quantity")
# async def order_quantity(message: types.Message, state: FSMContext):
#     if message.text.isdigit():
#         data = await state.get_data()
#         quantity = message.text
#         choice = data.get('choice')
#         choice_price = sushi_price[choice]
#         await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
#         await message.answer("<b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\n"
#                              f"{choice} {quantity}—à—Ç {choice_price}‚ÇΩ\n\n"
#                              f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ {int(quantity) * choice_price}‚ÇΩ", parse_mode='HTML')
#         await bot.send_chat_action(chat_id=message.chat.id, action="typing", )  # —ç—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
#         time.sleep(0.5)
#         await message.answer("–£–∂–µ –≥–æ—Ç–æ–≤–∏–º")
#         await state.finish()
#     else:
#         await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä–∞–º–∏")
#         await state.set_state("quantity")
#
#
# @dp.message_handler(state='cancel')
# async def cancel(message: types.Message, state: FSMContext):
#     await message.answer("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω")
#     await state.finish()